---
title: "DANL 310: Data Visualization and Presentation\nMidterm Exam"
date: "2023-04-06"
---

# Honor Pledges

I solemnly swear that I will not cheat or engage in any form of academic dishonesty during this exam.

<br>

I will not communicate with other students or use unauthorized materials.

<br>

I will uphold the integrity of this exam and demonstrate my own knowledge and abilities.

<br>

By taking this pledge, I acknowledge that academic dishonesty undermines the academic process and is a violation of the trust placed in me as a student.

<br>

I accept the consequences of any violation of this promise.

<br>

Student's Signature: Andrew Mosbo

## Exam Questions

The midterm exam questions are provided in the following webpage: - <https://bcdanl.github.io/DANL310-midterm-q.html>.

## Loading R packages

```{r, warning=F, message=F}
library(knitr)
library(tidyverse)
library(lubridate)
library(socviz)
library(ggthemes)
library(hrbrthemes)
library(gapminder)
```

-   `hrbrthemes::theme_ipsum()` or `theme_minimal()` can be used for your ggplot theme.

```{r setup, include = FALSE}
# library(tidyverse)
# library(knitr)
# library(kableExtra)
# library(ggthemes)
# library(ggtech)
# library(ggthemr)
# library(ggthemes)
# library(hrbrthemes)
# library(hexbin)
# library(ggforce)
# library(skimr)

knitr::opts_chunk$set(fig.width=8, fig.height=5,
                      echo = T, eval = T, warning = F, message = F) 
```

<br>

# Question 1

The following data is for Question 1:

```{r}
gapminder <- gapminder
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(gapminder) 
```

<br>

Q1a. Replicate the given ggplot.

-   Use the color `#0072B2` for dots.

```{r, fig.height= 15, fig.width= 15}
q1 <- gapminder %>% 
  filter(year == 2007, continent != 'Oceania')

q1$country <- fct_reorder(q1$country, q1$lifeExp)

ggplot(q1) +
  geom_point(aes(y = country, x = lifeExp), color = 'blue') +
  facet_wrap(~continent, ncol = 2, scales = 'free_y') +
  geom_text(aes(x = lifeExp, y = country, label = lifeExp), nudge_x = 5) +
  theme_minimal() +
  labs(title = 'Life Expectancy in 2007') +
  xlab('') +
  theme(strip.text = element_text(size = 15, face = 'bold'), 
        plot.title = element_text(hjust = 0.5, size = 20))
  
  

```

Q1b. Make a simple comment on the visualization result.

We can see that African countries have a lower life expectancy than other regions.

# Question 2

The following data is for Question 2:

```{r}
n_tweets_long <- read_csv(
  'https://bcdanl.github.io/data/n_tweets_long.csv')
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(n_tweets_long) 
```

<br>

Q2a. Replicate the given ggplot.

-   The following describes the `type` values:
    -   `n_ot_us`: Number of US tweets
    -   `n_ot_wrld`: Number of worldwide tweets
    -   `n_rt_lk_us`: Number of US retweets & likes
    -   `n_rt_lk_wrld`: Number of worldwide retweets & likes
-   Use the colors, `maroon` and `#428bca` properly.

```{r, fig.height = , fig.width=}
q2og <- n_tweets_long %>% 
  filter(type %in% c('n_ot_us','n_ot_wrld')) %>% 
  mutate(type = ifelse(type == 'n_ot_us', 'US','Worldwide'))

q2rt <- n_tweets_long %>% 
  filter(type %in% c('n_rt_lk_us','n_rt_lk_wrld')) %>% 
  mutate(type = ifelse(type == 'n_rt_lk_us', 'US','Worldwide'))

ggplot() +
  geom_bar(data = q2og, mapping = aes(x = year, y = n, fill = type), position = 'dodge',stat = 'identity', alpha = 0.7) +
  geom_point(data = q2rt, mapping = aes(x = year, y = n, group = type), size = 1.3) +
  geom_line(data = q2rt, mapping = aes(x = year, y = n, color = type), size = 1.3) +
  scale_fill_manual(values = c("maroon", "#428bca")) +
  scale_color_manual(values = c("maroon", "#428bca")) +
  labs(color = 'Retweets and Likes', fill = 'Tweets', caption = 'Source: Choe') +
  theme_ipsum() +
  theme(legend.position="top") +
  ylab('Number of Tweets, Retweets, and Likes \n (in thousands)') +
  xlab('Year') +
  scale_x_continuous(breaks = 2012:2017, labels = as.character(2012:2017))
```

Q2b. Make a simple comment on the visualization result.

The number of tweets, retweets, and likes have increased from 2012 to 2017.

<br><br>

# Question 3

The following data set is for Question 3:

```{r}
nyc_dog_license <- read_csv(
  'https://bcdanl.github.io/data/nyc_dog_license.csv')
nyc_zips_coord <- read_csv(
  'https://bcdanl.github.io/data/nyc_zips_coord.csv')
nyc_zips_df <- read_csv(
  'https://bcdanl.github.io/data/nyc_zips_df.csv')
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(nyc_dog_license) 
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(nyc_zips_coord) 
```

```{r, result = 'asis', echo = F}
rmarkdown::paged_table(nyc_zips_df) 
```

<br>

Q3a. Replicate the given ggplot.

-   You should calculate the proportion of `Pit Bull (or Mix)` for each zip code.
-   You should join data.frames properly.
-   Choose the color palette from the `viridis` scales <https://ggplot2.tidyverse.org/reference/scale_viridis.html>.
-   Use `coord_map(projection = "albers", lat0 = 39, lat1 = 45)`.

```{r, fig.width= 5, fig.height= 5}

ggplot(nyc_zips_coord) +
  geom_polygon(aes(x = X, y = Y, group = objectid), fill = 'white', color = 'black') +
  theme_map()
q3l <- nyc_dog_license %>% 
  mutate(pit = if_else(breed_rc == "Pit Bull (or Mix)", 1, 0)) %>% 
  group_by(zip_code) %>% 
  summarise(pit = sum(pit), n = n()) %>% 
  mutate(pct_pit = pit/n)
  
q3mp <- left_join(nyc_zips_coord, nyc_zips_df, by = 'objectid') %>% 
  left_join(q3l, by = 'zip_code')

ggplot(q3mp) +
  geom_polygon(aes(x = X, y = Y, group = objectid, fill = pct_pit), color = 'black') +
  theme_map() +
  coord_fixed() +
  scale_fill_viridis_c(option = "plasma") +
  theme(legend.position="top") +
  labs(title = "NYC's Pittbull", subtitle = 'By Zip Code, Based on Licensing Data') +
  coord_map(projection = "albers", lat0 = 39, lat1 = 45)



```

Q3b. Which `zip_code` does have the highest proportion of `Pit Bull (or Mix)`?

1009

<br><br>

# Question 4

The following data is for Question 4:

```{r}
stock <- read_csv('https://bcdanl.github.io/data/stocks2013_2023.csv')
```

```{r, result = 'asis', echo = F, message = F, warning = F}
rmarkdown::paged_table(stock) 
```

<br>

Q4a. Replicate the given ggplot.

```{r, fig.height=  10, fig.width=10 }
q4 <- stock %>% 
  mutate(year = as.numeric(format(Date,'%Y'))) %>% 
  filter(year %in% 2019:2022)

ggplot(q4) +
  geom_point(aes(x = log(Volume), y = log(Close), color = company), alpha = 0.1) +
  geom_smooth(aes(x = log(Volume), y = log(Close)), method = 'lm', color = 'black') +
  facet_grid(company~year) +
  guides(color = 'none') +
  xlab('Volume (in log)') +
  ylab('Close (in log)') +
  theme_ipsum()

```

Q4b. In 2020, which company's stock trading `Volume` does seem to be the most insensitive to a change in `Close` price?

Google's stock in 2020 had the most change.
